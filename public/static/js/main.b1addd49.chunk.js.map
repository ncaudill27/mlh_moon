{"version":3,"sources":["space_music.mp3","ship.png","utils/navigation.js","components/Ship.js","components/Planet.js","components/StatusBar.js","components/HUD.js","components/GameOver.js","utils/generatePlanets.js","utils/highScoresAPI.js","containers/Universe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","limitGameWindow","top","left","rightEdge","document","documentElement","scrollWidth","bottomEdge","scrollHeight","maintainOrientation","e","deg","orientation","Akey","keyCode","Dkey","style","setProperty","navigateShip","Wkey","window","scroll","behavior","Math","abs","accelerateShip","seedOrientation","rootOrientation","getComputedStyle","getPropertyValue","slice","parseInt","Ship","state","clientTop","clientLeft","shipBoundaries","getElementById","getBoundingClientRect","handleMovement","setState","props","findShip","focus","onKeyDown","this","tabIndex","src","ship","alt","id","Component","Planet","water","medicine","food","size","planetStyle","backgroundColor","width","height","position","className","StatusBar","resource","amount","statusStyle","setColor","setSize","padding","margin","color","charAt","toUpperCase","HUD","GameOver","score","isHighScore","submitHighScore","useState","name","setName","message","highScoreForm","onSubmit","autoComplete","type","value","onChange","required","onClick","history","go","num","count","all","randomNumber","min","max","floor","random","determineType","values","high","key","isDepleted","transferResources","waterTransferred","foodTransferred","medicineTransferred","stopTransfer","clearInterval","transferId","setCollisionBoundaries","DOMelement","boundaries","stripBoundingClientFunctions","boundingClientObject","findCollision","x","y","planetType","push","postHighScore","payload","fetch","JSON","stringify","then","res","json","music","Howl","space_music","loop","volume","Universe","gameOver","planetsArray","componentDidMount","play","generatePlanets","decayId","setInterval","decayResources","scoreId","addPoint","losingCondition","stop","highScores","length","some","s","preventDefault","data","addHighScore","prevState","stopDecay","map","planet","beginTransfer","renderPlanets","App","view","toIntro","startGame","renderIntro","renderHighScores","idx","switch","newScore","placeNewHighScore","concat","sort","a","b","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b1addd49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space_music.c18e0401.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ship.89a60ce9.png\";","const limitGameWindow = (top, left) => {\n  const rightEdge = document.documentElement.scrollWidth - 139;\n  const bottomEdge = document.documentElement.scrollHeight - 139;\n  if (left < 0) left = 0;\n  else if (top < 0) top = 0;\n  else if (left > rightEdge) left = rightEdge;\n  else if (top > bottomEdge) top = bottomEdge;\n\n  return [top, left];\n}\n\nconst rotateShip = deg => {\n  document.documentElement.style.setProperty('--orientation', deg);\n}\n\nconst maintainOrientation = (e, {orientation}) => {\n  const Akey = e.keyCode === 65;\n  const Dkey = e.keyCode === 68;\n\n  if (Akey) orientation -= 10;\n  else if (Dkey) orientation += 10;\n\n  if (orientation > 359) orientation = 0;\n  else if (orientation < 0) orientation = 358;\n  \n  rotateShip(orientation + 'deg');\n\n  return orientation;\n}\n\nconst accelerateShip = (orientation, top, left) => {\n\n  switch (true) {\n\n    case (0 <= orientation && orientation <= 90):\n      window.scroll({top: top -= 90-orientation, left: left += orientation , behavior: 'smooth'});\n      [top, left] = limitGameWindow(top, left);\n\n      return [orientation, top, left];\n\n    case (90 < orientation && orientation <= 180):\n      window.scroll({top: top += 90 - Math.abs(180 - orientation), left: left += 180-orientation , behavior: 'smooth'});\n      [top, left] = limitGameWindow(top, left);\n\n      return [orientation, top, left];\n\n    case (180 < orientation && orientation <= 270):\n      window.scroll({top: top += 270 - orientation, left: left -= 90 - Math.abs(270 - orientation) , behavior: 'smooth'});\n      [top, left] = limitGameWindow(top, left);\n\n      return [orientation, top, left];\n\n    case ( 270 < orientation && orientation <= 359):\n      window.scroll({top: top -= 90 - Math.abs(360-orientation), left: left -= 90 - Math.abs(270 - orientation) , behavior: 'smooth'});\n      [top, left] = limitGameWindow(top, left);\n\n      return [orientation, top, left];\n\n    default:\n      break;\n  }\n}\n\nconst navigateShip = (e, {orientation, top, left}) => {\n  const Wkey = e.keyCode === 87;\n\n  orientation = maintainOrientation(e, {orientation});\n  if (Wkey) [orientation, top, left] = accelerateShip(orientation, top, left);\n\n  return {orientation, top, left}\n}\n\nexport {\n  limitGameWindow,\n  navigateShip\n} ","import React, { Component } from 'react';\nimport ship from '../ship.png';\nimport { navigateShip } from '../utils/navigation';\n\nconst seedOrientation = () => {\n\tconst rootOrientation = getComputedStyle(document.documentElement)\n\t.getPropertyValue('--orientation')\n\t.slice(1,3)\n\treturn parseInt(rootOrientation, 10);\n}\n\nclass Ship extends Component {\n\n\tstate = {\n\t\torientation: seedOrientation(),\n\t\ttop: document.documentElement.clientTop,\n\t\tleft: document.documentElement.clientLeft\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.getElementById('Ship').focus();\n\t}\n\n\tshipBoundaries = () => {\n\t\tconst ship = document.getElementById('Ship');\n\t\treturn ship.getBoundingClientRect();\n\t}\n\n\thandleMovement = e => {\n\t\tthis.setState(navigateShip(e, this.state));\n\t\tthis.props.findShip(this.shipBoundaries());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div onKeyDown={this.handleMovement}>\n\t\t\t\t<img\n\t\t\t\t\ttabIndex='1'\n\t\t\t\t\tsrc={ship}\n\t\t\t\t\talt='Ship'\n\t\t\t\t\tid='Ship'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Ship;","import React, { useState } from 'react';\n\nfunction Planet({water, medicine, food, top, left, size, id}) {\n\n\tconst planetStyle = {\n\t\tbackgroundColor: `rgb(${medicine}, ${food}, ${water})`,\n\t\twidth: `${size}px`,\n\t\theight: `${size}px`,\n\t\tposition: 'absolute',\n\t\ttop: `${top}px`,\n\t\tleft: `${left}px`\n\t}\n\t\n\treturn (\n\t\t<div className=\"Planet\" id={id} style={planetStyle}>\n\n\t\t</div>\n\t);\n}\n\nexport default Planet;","import React from 'react';\n\nfunction StatusBar({resource, amount}) {\n\n\tconst setColor = resource => {\n\t\tswitch (resource) {\n\t\t\tcase 'medicine':\n\t\t\t\treturn 'red';\n\n\t\t\tcase 'water':\n\t\t\t\treturn 'cyan';\n\t\t\t\n\t\t\tcase 'food':\n\t\t\t\treturn 'yellow';\n\t\t\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t};\n\t}\n\n\tconst setSize = amount => {\n\t\treturn amount + 'px'\n\t\t// return amount / 10 + '%'\n\t}\n\t\n\tconst statusStyle = {\n\t\tbackgroundColor: setColor(resource),\n\t\twidth: setSize(amount),\n\t\theight: '20px'\n\t}\n\n\tconst labelStyle = {\n\t\tpadding:'0 5px',\n\t\tmargin:'0',\n\t\tcolor: 'black',\n\t}\n\n\n\t// create function to display message when < certain size;\n\t// give bar a measurement\n\n\treturn (\n\t\t<div className=\"Status-bar\" style={statusStyle}>\n\t\t\t<p style={labelStyle}>{resource.charAt(0).toUpperCase() + resource.slice(1)}</p>\n\t\t</div>\n\t);\n}\n\nexport default StatusBar;","import React from 'react';\nimport StatusBar from './StatusBar';\n\nfunction HUD({water, medicine, food}) {\n\n\tconst messageCondition = () => {\n\t\tif (water < 300) return true;\n\t\tif (medicine < 300) return true;\n\t\tif (food < 300) return true;\n\n\t\treturn false;\n\t}\n\n\treturn (\n\t\t<div className='HUD'>\n\t\t\t{ messageCondition() ? <h2 id='warning'>HURRY!! YOU'RE RUNNING LOW ON SUPPLIES!</h2> : null }\n\t\t\t<StatusBar resource='water' amount={water} />\n\t\t\t<StatusBar resource='food' amount={food} />\n\t\t\t<StatusBar resource='medicine' amount={medicine} />\n\t\t</div>\n\t);\n}\n\nexport default HUD;","import React, { useState } from 'react';\n\nfunction GameOver({score, isHighScore, submitHighScore}) {\n\n  const [name, setName] = useState('');\n\n  const handleChange = () => {\n    const name = document.getElementById('name').value;\n    setName(name);\n  }\n\n  const refreshPage = () => window.history.go(0);\n\n  const message = isHighScore ? \"HIGH SCORE!!!\" : \"GAME OVER\"\n\n  const highScoreForm = <form onSubmit={ e => submitHighScore(name, e) } autoComplete=\"off\">\n    <label>Name</label>\n    <input id='name' type='text' name='name' value={name} onChange={handleChange} required></input>\n    <input type='hidden' name='score' value={score} />\n    <input type='submit' />\n  </form>\n\n  return(\n    <div className=\"Game-over\">\n      <h1 style={{margin: '0 auto', padding: '10px 0'}}>{message}</h1>\n      <h2 style={{margin: '0 auto', padding: '10px 0'}}>Score - {score}</h2>\n      {\n        isHighScore\n        ? highScoreForm\n        : <button onClick={refreshPage}>Try Again</button>\n      }\n    </div>\n  );\n}\n\nexport default GameOver;","export default function(num) {\n\tfor (let count = 1; count <= num; count++) {\n\t\tnew Planet(count);\n\t}\n\n\treturn Planet.all;\n}\n\nfunction randomNumber(min, max) {\n\treturn Math.floor(Math.random() * (max - min) + min); \n}\n\nclass Planet {\n\n\tstatic all = [];\n\n\tconstructor(id) {\n\t\tthis.id = id;\n\t\tthis.water = Math.floor(Math.random() * 255) + 1;\n\t\tthis.medicine = Math.floor(Math.random() * 255) + 1;\n\t\tthis.food = Math.floor(Math.random() * 255) + 1;\n\t\tthis.top = randomNumber(700, 15000);\n\t\tthis.left = randomNumber(700, 15000);\n\t\tthis.size = randomNumber(300, 700);\n\t\tthis.planetType = this.determineType();\n\t\tPlanet.all.push(this);\n\t}\n\n\tdetermineType = () => {\n\t\tconst values = { water: this.water, medicine: this.medicine, food: this.food}\n\t\tlet high = 0;\n\t\tlet type = null;\n\t\tfor (let key in values) {\n\t\t\tif (values[key] > high) {\n\t\t\t\thigh = values[key];\n\t\t\t\ttype = key;\n\t\t\t};\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tisDepleted = () => this.water < 10 || this.food < 10 || this.medicine < 10;\n\n\ttransferResources = () => {\n\t\tlet waterTransferred = this.water * 0.05 + 2;\n\t\tlet foodTransferred = this.food * 0.05 + 2;\n\t\tlet medicineTransferred = this.medicine * 0.05 + 2;\n\n\t\t// lower planet's colors/resources\n\t\tthis.water -= this.type === 'water' ? waterTransferred * 2 : waterTransferred;\n\t\tthis.food -= this.type === 'food' ? foodTransferred * 2 : foodTransferred;\n\t\tthis.medicine -= this.type === 'medicine' ? medicineTransferred * 2 : medicineTransferred;\n\n\t\tif ( this.isDepleted() ) return false;\n\n\t\treturn {\n\t\t\twater: waterTransferred,\n\t\t\tfood: foodTransferred,\n\t\t\tmedicine: medicineTransferred\n\t\t};\n\t}\n\n\tstopTransfer = () => clearInterval(this.transferId);\n\n\tsetCollisionBoundaries = () => {\n\t\tthis.DOMelement = document.getElementById(this.id);\n\n\t\tthis.boundaries = this.stripBoundingClientFunctions(\n\t\t\tthis.DOMelement.getBoundingClientRect()\n\t\t);\n\t}\n\n\tstripBoundingClientFunctions = boundingClientObject => {\n\t\tconst boundaries = {};\n\t\t\n\t\tfor (let key in boundingClientObject) {\n\t\t\tif (typeof boundingClientObject[key] !== 'function') boundaries[key] = boundingClientObject[key];\n\t\t};\n\n\t\treturn boundaries;\n\t}\n\n\tfindCollision = ship => {\n\t\tthis.setCollisionBoundaries();\n\t\tconst { x, y, width, height } = this.boundaries;\n\n\t\tif (\n\t\t\tship.x < x + width &&\n\t\t\tship.x + ship.width > x &&\n\t\t\tship.y < y + height &&\n\t\t\tship.y + ship.height > y\n\t\t) {\n\t\t\treturn true;\n\t\t};\n\n\t\treturn false;\n\t}\n}","export const postHighScore = payload => {\n  return fetch('/api/v1/high_scores', {\n    'method': 'POST',\n    'headers': {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    'body': JSON.stringify(payload)\n  }).then( res => res.json() );\n}\n\nexport const fetchHighScores = () => {\n  return fetch('/api/v1/high_scores')\n  .then( res => res.json() )\n  .then( highScores => highScores );\n}","import React, { Component } from 'react';\nimport { Howl, Howler } from 'howler';\nimport space_music from '../space_music.mp3';\nimport Ship from '../components/Ship';\nimport Planet from '../components/Planet';\nimport HUD from '../components/HUD';\nimport GameOver from '../components/GameOver';\nimport generatePlanets from '../utils/generatePlanets';\nimport { postHighScore } from '../utils/highScoresAPI';\n\nconst music = new Howl({\n\tsrc: [space_music],\n\tloop: true,\n\tvolume: 0.4\n});\n\nclass Universe extends Component { \n\n\tstate = {\n\t\tgameOver: false,\n\t\tplanetsArray: [],\n\t\tshipBoundaries: {},\n\t\tmedicine: 1000,\n\t\tfood: 1000,\n\t\twater: 1000,\n\t\tscore: 0,\n\t\tisHighScore: false\n\t}\n\n\tcomponentDidMount = () => {\n\t\tmusic.play();\n\t\tthis.generatePlanets();\n\t\tthis.decayId = setInterval(this.decayResources, 100);\n\t\tthis.scoreId = setInterval(this.addPoint, 10);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.decayId);\n\t\tclearInterval(this.scoreId);\n\t\tthis.state.planetsArray.map( planet => clearInterval(planet.transferId) );\n\t\tmusic.stop();\n\t}\n\n\tlosingCondition = () => {\n\t\tconst { medicine, food, water } = this.state;\n\n\t\tif (medicine <= 0) return true;\n\t\telse if (food <= 0) return true;\n\t\telse if (water <= 0) return true;\n\n\t\treturn false;\n\t}\n\n\tgameOver = () => {\n\t\tclearInterval(this.decayId);\n\t\tclearInterval(this.scoreId);\n\t\tthis.setState({gameOver: true});\n\t\tmusic.stop();\n\t\tif (this.isHighScore) this.setState({isHighScore: true});\n\t}\n\n\tisHighScore = () => {\n\t\treturn this.props.highScores.length ? this.props.highScores.some( s => this.state.score > s.score ) : true;\n\t}\n\n\tsubmitHighScore = (name, e) => {\n\t\te.preventDefault();\n\n\t\tconst payload = {\n\t\t\tname,\n\t\t\tscore: this.state.score\n\t\t}\n\n\t\tpostHighScore(payload)\n\t\t.then( data => this.props.addHighScore(data) );\n\t}\n\n\tdecayResources = () => {\n\t\tif ( this.losingCondition() ) this.gameOver();\n\n\t\tthis.setState( prevState => ({\n\t\t\tmedicine: prevState.medicine - 25,\n\t\t\tfood: prevState.food - 25,\n\t\t\twater: prevState.water - 25,\n\t\t}));\n\t}\n\n\tstopDecay = () => clearInterval(this.decayId);\n\n\taddPoint = () => this.setState( prevState => ({\n\t\tscore: prevState.score + 1\n\t}));\n\n\tfindShip = shipBoundaries => {\n\t\tthis.state.planetsArray.map( planet => {\n\t\t\tconst collision = planet.findCollision(shipBoundaries);\n\t\t\tif ( collision && !planet.transferId && !!planet.transferResources() ) {\n\t\t\t\tplanet.transferId = setInterval( () => this.beginTransfer(planet), 250);\n\t\t\t} else if ( planet.isDepleted() ) {\n\t\t\t\tplanet.stopTransfer();\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\tshipBoundaries\n\t\t});\n\t}\n\n\tbeginTransfer = planet => {\n\t\tlet {\n\t\t\twater,\n\t\t\tfood,\n\t\t\tmedicine \n\t\t} = planet.transferResources();\n\t\t\n\t\tif ( water && food && medicine ) {\n\t\t\tthis.setState( prevState => ({\n\t\t\t\twater: prevState.water + water,\n\t\t\t\tfood: prevState.food + food,\n\t\t\t\tmedicine: prevState.medicine + medicine\n\t\t\t}));\n\t\t};\n\t}\n\n\tgeneratePlanets = () => {\n\t\tconst planetsArray = generatePlanets(80);\n\t\tthis.setState({planetsArray});\n\t}\n\n\trenderPlanets = () => {\n\t\treturn this.state.planetsArray.map( planet => {\n\t\t\treturn <Planet {...planet} />;\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { water, food, medicine } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"Universe\">\n\t\t\t\t<button id='mute' onClick={() => music.volume(0)}>MUTE</button>\n\t\t\t\t<Ship findShip={this.findShip} />\n\t\t\t\t{ this.state.planetsArray.length ? this.renderPlanets() : null }\n\t\t\t\t<HUD water={water} food={food} medicine={medicine} />\n\t\t\t\t{ this.state.gameOver ? <GameOver score={this.state.score} isHighScore={this.state.isHighScore} submitHighScore={this.submitHighScore} /> : null }\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Universe;","import React, { Component } from 'react';\nimport './App.css';\nimport Universe from './containers/Universe';\nimport { fetchHighScores } from './utils/highScoresAPI';\n\nclass App extends Component {\n\t\n\tstate = {\n\t\thighScores: [],\n\t\tview: \"intro\"\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchHighScores()\n\t\t.then( highScores => this.setState({highScores}) )\n\t}\n\n\ttoIntro = () => this.setState({view: 'intro'});\n\tstartGame = () => this.setState({view: \"universe\"});\n\t\n\n\trenderIntro = () => {\n\t\treturn (\n\t\t\t<div className=\"intro\">\n\t\t\t\t<div className='copy'>\n\t\t\t\t\t<h1>Welcome to Hack the Planet!</h1>\n\t\t\t\t\t<p>Greetings, hero! You are the last hope for humanity. Please, stay alive so we can reach for the stars.</p>\n\t\t\t\t\t<p>Objectives: maintain resources by flying over planets.</p>\n\t\t\t\t\t<p>Controls:</p>\n\t\t\t\t\t<p>'W' key propels your ship forward. Hold down w at your own risk!</p>\n\t\t\t\t\t<p>'A' key rotates to the left.</p>\n\t\t\t\t\t<p>'D' key rotates to the right.</p>\n\t\t\t\t\t<button id=\"startbutton\" onClick={this.startGame}>Start</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"highscores\">\n\t\t\t\t\t<h1>High Scores</h1>\n\t\t\t\t\t<div className='scores'>\n\t\t\t\t\t\t{ this.state.highScores.length ? this.renderHighScores() : null }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderHighScores = () => {\n\t\treturn this.state.highScores.map( ({name, score}, idx) => {\n\t\t\treturn <div className=\"highscore\">\n\t\t\t\t<h3>{idx +1}) {name} - {score}</h3>\n\t\t\t</div>\n\t\t})\n\t}\n\n\tswitch = () => {\n\t\tswitch (this.state.view) {\n\t\t\tcase 'intro':\n\t\t\t\treturn this.renderIntro();\n\t\t\t\n\t\t\tcase 'universe':\n\t\t\t\treturn <Universe highScores={this.state.highScores} addHighScore={this.addHighScore} />\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t};\n\t}\n\n\taddHighScore = newScore => {\n\t\tthis.toIntro();\n\t\t// add new score in proper rank\n\t\tconst highScores = this.placeNewHighScore(newScore);\n\t\t// set updated highScores to trigger render\n\t\tthis.setState({highScores});\n\t}\n\n\tplaceNewHighScore = newScore => {\n\t\tconst highScores = this.state.highScores.concat(newScore);\n\t\t// place new score it's place\n\t\thighScores.sort( (a, b) => a.score < b.score ? 1 : -1 );\n\t\t// remove 11th score\n\t\treturn highScores.slice(0, 11);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{ this.switch() }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}